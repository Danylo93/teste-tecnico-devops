name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        
    steps:
    - name: Checando Código Fonte
      uses: actions/checkout@v3

    - name: Usando a versão ${{ matrix.node-version }} do Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Instalando as dependências do projeto
      run: cd frontend && yarn install

    - name: Executando testes unitários
      run: cd frontend && yarn test

    - name: Validando se diretório ou arquivo existe para o build
      run: npx ts-node ./frontend/src/check-file.ts

    - name: Construindo aplicação
      run: cd frontend && yarn build

    - name: Criando um Timestamp para Diversificar Versões do Release
      run: echo "RELEASE_TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

    - name: Arquivando artefatos de produção
      run: |
        cd frontend
        zip -r -9 ../build.zip .
      working-directory: ${{ github.workspace }}


    - name: Carregando artefatos de produção
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: build-artifacts
        path: ./build.zip

    - name: Criando versão do GitHub
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v1.0.${{ github.run_number }}-${{ env.RELEASE_TIMESTAMP }}"
        release_name: "Release v1.0.${{ github.run_number }}-${{ env.RELEASE_TIMESTAMP }}"
        draft: false
        prerelease: false
        body: |
          Release notes for version v1.0.${{ github.run_number }}-${{ env.RELEASE_TIMESTAMP }}
    
    - name: Carregando recurso de lançamento
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build.zip
        asset_name: build.zip
        asset_content_type: application/zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: test
      url: https://placeholder-test-environment-url.com 

    steps:
    - name: Checando Código
      uses: actions/checkout@v3

    - name: Baixando artefatos de compilação
      uses: actions/download-artifact@v4
      with:
        path: ./frontend

    - name: Realizando Deploy no ambiente de testes
      run: echo "Realizando Deploy no ambiente de testes"
      env:
        DEPLOY_ENVIRONMENT: test
  
  notify:
    needs: [build, deploy]
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Enviando notificação em caso de falha
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        from: agenciafwdigital@gmail.com
        subject: Falha no pipeline de CI/CD
        body: |
          O pipeline de CI/CD falhou durante o ${{ job.status }}.
        to: agenciafwdigital@gmail.com